-- SOULS HUB PREMIUM (UI FRAMEWORK ONLY)
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")

-- ========== PUT THIS AT THE VERY TOP ==========
local WHITELISTED_USERS = {
    "tanveerstink",  -- Your username
    "bobbyjack_9" ,  -- Add other whitelisted users here
    "Manfaceprorobloxyay",
    "xlzzzmain",
    "bestgkrivalsb1",
    "Orange_Boy361",
    "ajjbsbbsb2223",
    "Min85500",
    "ArthDutta",
    "GivingisGood_6",
    "HWIllLAlIlIIllWWBlIl",
    "sfsfafafsaf13",
    "Msi_astro",
    "dracobot_17",
    "untamkne330"
}

-- Clear existing UI
if game:GetService("CoreGui"):FindFirstChild("SOULS_HUB") then
    game:GetService("CoreGui").SOULS_HUB:Destroy()
end

-- Create main UI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SOULS_HUB"
screenGui.Parent = game:GetService("CoreGui")

-- Main Frame with modern styling
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 700, 0, 380)
mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BackgroundTransparency = 0.1
mainFrame.BorderSizePixel = 0
mainFrame.ClipsDescendants = true
mainFrame.ZIndex = 1
mainFrame.Visible = false
mainFrame.Parent = screenGui

-- White outline with rounded corners
local outline = Instance.new("UIStroke")
outline.Color = Color3.new(1, 1, 1)
outline.Thickness = 2
outline.Transparency = 0.1
outline.Parent = mainFrame

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 16)
corner.Parent = mainFrame

-- Gradient overlay
local gradient = Instance.new("UIGradient")
gradient.Rotation = 90
gradient.Transparency = NumberSequence.new({
    NumberSequenceKeypoint.new(0, 0.6),
    NumberSequenceKeypoint.new(1, 0.8)
})
gradient.Parent = mainFrame

-- Toggle Button with matching style (initially hidden)
local toggleBtn = Instance.new("TextButton")
toggleBtn.Name = "ToggleButton"
toggleBtn.Size = UDim2.new(0, 140, 0, 40)
toggleBtn.Position = UDim2.new(0.5, -70, 0, 20)
toggleBtn.AnchorPoint = Vector2.new(0.5, 0)
toggleBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
toggleBtn.BackgroundTransparency = 0.3
toggleBtn.Text = "TOGGLE MENU"
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextSize = 14
toggleBtn.Visible = false
toggleBtn.ZIndex = 10
toggleBtn.Parent = screenGui

-- Add text outline to toggle button
local toggleTextOutline = Instance.new("UIStroke")
toggleTextOutline.Color = Color3.new(0, 0, 0)
toggleTextOutline.Thickness = 1
toggleTextOutline.Transparency = 0
toggleTextOutline.Parent = toggleBtn

-- Rounded corners and outline for toggle
local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(0, 12)
toggleCorner.Parent = toggleBtn

local toggleOutline = Instance.new("UIStroke")
toggleOutline.Color = Color3.new(1, 1, 1)
toggleOutline.Thickness = 1
toggleOutline.Transparency = 0.2
toggleOutline.Parent = toggleBtn

-- Draggable Function
local function makeDraggable(frame)
    local dragInput, dragStart, startPos
    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragInput = nil
                end
            end)
        end
    end)
    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(
                startPos.X.Scale, 
                startPos.X.Offset + delta.X,
                startPos.Y.Scale, 
                startPos.Y.Offset + delta.Y
            )
        end
    end)
end
makeDraggable(mainFrame)
makeDraggable(toggleBtn)

-- Close Button
local closeBtn = Instance.new("TextButton")
closeBtn.Name = "CloseButton"
closeBtn.Size = UDim2.new(0, 30, 0, 30)
closeBtn.Position = UDim2.new(1, -35, 0, 10)
closeBtn.AnchorPoint = Vector2.new(1, 0)
closeBtn.BackgroundTransparency = 1
closeBtn.Text = "X"
closeBtn.TextColor3 = Color3.new(1, 1, 1)
closeBtn.TextSize = 20
closeBtn.Font = Enum.Font.GothamBold
closeBtn.ZIndex = 3
closeBtn.Parent = mainFrame

-- Add text outline to close button
local closeTextOutline = Instance.new("UIStroke")
closeTextOutline.Color = Color3.new(0, 0, 0)
closeTextOutline.Thickness = 1
closeTextOutline.Transparency = 0
closeTextOutline.Parent = closeBtn

-- Title Text with glow
local titleFont = Enum.Font.GothamBold
local titleText = Instance.new("TextLabel")
titleText.Name = "Title"
titleText.Size = UDim2.new(0, 200, 0, 30)
titleText.Position = UDim2.new(0, 20, 0, 10)
titleText.BackgroundTransparency = 1
titleText.Text = "SOULS HUB"
titleText.TextColor3 = Color3.new(1, 1, 1)
titleText.TextSize = 24
titleText.Font = titleFont
titleText.TextXAlignment = Enum.TextXAlignment.Left
titleText.ZIndex = 2
titleText.Parent = mainFrame

-- Add text outline to title
local titleTextOutline = Instance.new("UIStroke")
titleTextOutline.Color = Color3.new(0, 0, 0)
titleTextOutline.Thickness = 1
titleTextOutline.Transparency = 0
titleTextOutline.Parent = titleText

-- Title glow effect
local titleGlow = Instance.new("UIGradient")
titleGlow.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)),
    ColorSequenceKeypoint.new(0.5, Color3.new(0.85, 0.85, 0.85)),
    ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1))
})
titleGlow.Rotation = -45
titleGlow.Transparency = NumberSequence.new(0.6)
titleGlow.Parent = titleText

-- Separators
local topSeparator = Instance.new("Frame")
topSeparator.Name = "TopSeparator"
topSeparator.Size = UDim2.new(1, -40, 0, 1)
topSeparator.Position = UDim2.new(0, 20, 0, 50)
topSeparator.BackgroundColor3 = Color3.new(1, 1, 1)
topSeparator.BorderSizePixel = 0
topSeparator.ZIndex = 2
topSeparator.Parent = mainFrame

local verticalSeparator = Instance.new("Frame")
verticalSeparator.Name = "VerticalSeparator"
verticalSeparator.Size = UDim2.new(0, 1, 1, -120)
verticalSeparator.Position = UDim2.new(0, 170, 0, 70)
verticalSeparator.BackgroundColor3 = Color3.new(1, 1, 1)
verticalSeparator.BorderSizePixel = 0
verticalSeparator.ZIndex = 2
verticalSeparator.Parent = mainFrame

-- Tab System
local tabContainer = Instance.new("Frame")
tabContainer.Name = "Tabs"
tabContainer.Size = UDim2.new(0, 150, 0, 280)
tabContainer.Position = UDim2.new(0, 15, 0, 70)
tabContainer.BackgroundTransparency = 1
tabContainer.ZIndex = 2
tabContainer.Parent = mainFrame

local contentContainer = Instance.new("Frame")
contentContainer.Name = "Content"
contentContainer.Size = UDim2.new(0, 500, 0, 280)
contentContainer.Position = UDim2.new(1, -515, 0, 70)
contentContainer.BackgroundTransparency = 1
contentContainer.ZIndex = 2
contentContainer.Parent = mainFrame

-- Tab Creation Function
local function createTab(tabName)
    local tab = Instance.new("TextButton")
    tab.Name = tabName
    tab.Size = UDim2.new(0, 140, 0, 30)
    tab.Position = UDim2.new(0, 0, 0, #tabContainer:GetChildren() * 35)
    tab.BackgroundTransparency = 1
    tab.Text = tabName
    tab.TextColor3 = Color3.new(1, 1, 1)
    tab.TextSize = 18
    tab.Font = Enum.Font.GothamBold
    tab.TextTransparency = 0.5
    tab.ZIndex = 3
    
    -- Add black text outline
    local tabTextOutline = Instance.new("UIStroke")
    tabTextOutline.Color = Color3.new(0, 0, 0)
    tabTextOutline.Thickness = 1
    tabTextOutline.Transparency = 0.5
    tabTextOutline.Parent = tab
    
    local outline = Instance.new("UIStroke")
    outline.Color = Color3.new(1, 1, 1)
    outline.Thickness = 1
    outline.Transparency = 0.5
    outline.Parent = tab
    
    local content = Instance.new("ScrollingFrame")
    content.Name = tabName.."Content"
    content.Size = UDim2.new(1, 0, 1, 0)
    content.BackgroundTransparency = 1
    content.Visible = false
    content.ScrollBarThickness = 5
    content.AutomaticCanvasSize = Enum.AutomaticSize.Y
    content.Parent = contentContainer
    
    tab.Parent = tabContainer
    return tab, content
end

-- Category Creation Function
local function addCategory(parent, text)
    local category = Instance.new("TextLabel")
    category.Name = text.."Category"
    category.Size = UDim2.new(0, 200, 0, 20)
    category.Position = UDim2.new(0, 0, 0, #parent:GetChildren() * 45)
    category.BackgroundTransparency = 1
    category.Text = text
    category.TextColor3 = Color3.new(1, 1, 1)
    category.TextSize = 16
    category.Font = titleFont
    category.TextXAlignment = Enum.TextXAlignment.Left
    category.ZIndex = 3
    
    -- Add black text outline
    local categoryTextOutline = Instance.new("UIStroke")
    categoryTextOutline.Color = Color3.new(0, 0, 0)
    categoryTextOutline.Thickness = 1
    categoryTextOutline.Transparency = 0
    categoryTextOutline.Parent = category
    
    category.Parent = parent
end

-- ========== REPLACE YOUR EXISTING createButton FUNCTION WITH THIS ==========
local function createButton(parent, buttonText, func)
    local button = Instance.new("TextButton")
    button.Name = buttonText
    button.Size = UDim2.new(0, 200, 0, 40)
    button.Position = UDim2.new(0, 0, 0, #parent:GetChildren() * 45)
    button.BackgroundTransparency = 1
    button.Text = buttonText
    button.TextColor3 = Color3.new(1, 1, 1)
    button.Font = Enum.Font.GothamBold
    button.TextSize = 14
    button.ZIndex = 3
    
    -- Add black text outline
    local buttonTextOutline = Instance.new("UIStroke")
    buttonTextOutline.Color = Color3.new(0, 0, 0)
    buttonTextOutline.Thickness = 1
    buttonTextOutline.Transparency = 0.3
    buttonTextOutline.Parent = button
    
    local outline = Instance.new("UIStroke")
    outline.Color = Color3.new(1, 1, 1)
    outline.Thickness = 1
    outline.Transparency = 0.3
    outline.Parent = button
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = button
    
    -- Modified click handler for whitelist check
    button.MouseButton1Click:Connect(function()
    if string.find(parent.Parent.Name:lower(), "premium") then
        local playerName = game.Players.LocalPlayer.Name:lower()
        local isAllowed = false
        for _, name in pairs(WHITELISTED_USERS) do
            if playerName == name:lower() then
                isAllowed = true
                break
            end
        end

        if isAllowed then
            if func then func() end
        else
            game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "PREMIUM ACCESS DENIED",
                Text = "DM soulsyt_ TO BUY",
                Duration = 5
            })
        end
    else
        if func then func() end
    end
end)

    -- Keep all existing effects
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundTransparency = 0.85,
            TextColor3 = Color3.new(0.9, 0.9, 0.9)
        }):Play()
    end)
    
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundTransparency = 1,
            TextColor3 = Color3.new(1, 1, 1)
        }):Play()
    end)
    
    button.Parent = parent
    return button
end

-- ========== TOGGLE BUTTON CREATION FUNCTION ==========
local function createToggle(parent, defaultText, onText, offText, onFunction, offFunction)
    local toggleEnabled = false
    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "ToggleButton"
    toggleButton.Size = UDim2.new(0, 200, 0, 40)
    toggleButton.Position = UDim2.new(0, 0, 0, #parent:GetChildren() * 45)
    toggleButton.BackgroundTransparency = 1
    toggleButton.Text = defaultText or "TOGGLE"
    toggleButton.TextColor3 = Color3.new(1, 1, 1)
    toggleButton.Font = Enum.Font.GothamBold
    toggleButton.TextSize = 14
    toggleButton.ZIndex = 3
    
    -- Add black text outline
    local toggleTextOutline = Instance.new("UIStroke")
    toggleTextOutline.Color = Color3.new(0, 0, 0)
    toggleTextOutline.Thickness = 1
    toggleTextOutline.Transparency = 0.3
    toggleTextOutline.Parent = toggleButton
    
    local outline = Instance.new("UIStroke")
    outline.Color = Color3.new(1, 1, 1)
    outline.Thickness = 1
    outline.Transparency = 0.3
    outline.Parent = toggleButton
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = toggleButton
    
    -- Hover animations
    toggleButton.MouseEnter:Connect(function()
        TweenService:Create(toggleButton, TweenInfo.new(0.2), {
            BackgroundTransparency = 0.85,
            TextColor3 = Color3.new(0.9, 0.9, 0.9)
        }):Play()
    end)
    
    toggleButton.MouseLeave:Connect(function()
        TweenService:Create(toggleButton, TweenInfo.new(0.2), {
            BackgroundTransparency = 1,
            TextColor3 = Color3.new(1, 1, 1)
        }):Play()
    end)
    
    -- Click Effects
    toggleButton.MouseButton1Down:Connect(function()
        game:GetService("TweenService"):Create(
            toggleButton,
            TweenInfo.new(0.1),
            {Size = UDim2.new(0, 190, 0, 38)}
        ):Play()
    end)
    
    toggleButton.MouseButton1Up:Connect(function()
        game:GetService("TweenService"):Create(
            toggleButton,
            TweenInfo.new(0.2),
            {Size = UDim2.new(0, 200, 0, 40)}
        ):Play()
    end)
    
    -- Toggle functionality
    toggleButton.MouseButton1Click:Connect(function()
        toggleEnabled = not toggleEnabled
        
        if toggleEnabled then
            toggleButton.Text = onText or "ON"
            if onFunction then
                onFunction()
            end
        else
            toggleButton.Text = offText or "OFF"
            if offFunction then
                offFunction()
            end
        end
    end)
    
    toggleButton.Parent = parent
    return toggleButton
end
                                      -- Create tabs
local miscTab, miscContent = createTab("MISC")
local creditsTab, creditsContent = createTab("CREDITS")

-- Add fling toggle to MISC tab
local flingActive = false
local flingToggle = createToggle(
    miscContent,
    "FLING OFF",
    "FLING ON",
    "FLING OFF",
    function()
        flingActive = true
        local p = game.Players.LocalPlayer
        local rs = game:GetService("RunService")
        local rep = game:GetService("ReplicatedStorage")
        
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "CHAR UNSUPPORTED",
            Text = "PLEASE CHANGE YOUR CHAR TO GAROU OTHERWISE U KNOW"
        })

        if not rep:FindFirstChild("fling_detect") then
            local dec = Instance.new("Decal")
            dec.Name = "fling_detect"
            dec.Parent = rep
        end

        coroutine.wrap(function()
            local c, hrp, vel, mv = nil, nil, nil, 0.1
            while flingActive do
                rs.Heartbeat:Wait()
                c = p.Character
                hrp = c and c:FindFirstChild("HumanoidRootPart")
                if hrp then
                    vel = hrp.Velocity
                    hrp.Velocity = vel * 10000 + Vector3.new(0, 10000, 0)
                    rs.RenderStepped:Wait()
                    hrp.Velocity = vel
                    rs.Stepped:Wait()
                    hrp.Velocity = vel + Vector3.new(0, mv, 0)
                    mv = -mv
                end
            end
        end)()
    end,
    function()
        flingActive = false
    end
)

-- Add teleport toggle to MISC tab
local teleportEnabled = false
local teleportConnection = nil
local teleportToggle = createToggle(
    miscContent,
    "TELEPORT OFF",
    "TELEPORT ON",
    "TELEPORT OFF",
    function()
        teleportEnabled = true
        local p = game.Players.LocalPlayer
        local tpCFrame = CFrame.new(-470.03186, 141.112961, -2.07546043)
        local plat = false

        local function mkPlat()
            if plat then return end
            plat = true
            local p = Instance.new("Part")
            p.Size = Vector3.new(70, 1, 70)
            p.Anchored = true
            p.Position = Vector3.new(tpCFrame.X, tpCFrame.Y - 0.5, tpCFrame.Z)
            p.Name = "Plat"
            p.Parent = workspace
        end

        local function notif()
            game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "CHANGE CHAR",
                Text = "Change char to Garou."
            })
        end

        local function teleport()
            local c = p.Character
            if not c or not c:FindFirstChild("HumanoidRootPart") then return end
            local root = c.HumanoidRootPart
            local orig = root.CFrame
            mkPlat()
            task.wait(1.3)
            root.CFrame = tpCFrame
            task.wait(3.7)
            root.CFrame = orig
        end

        teleportConnection = p:WaitForChild("PlayerGui"):WaitForChild("Hotbar"):WaitForChild("Backpack"):WaitForChild("Hotbar"):WaitForChild("2"):WaitForChild("Base").MouseButton1Click:Connect(function()
            if teleportEnabled and p.Backpack:FindFirstChild("Lethal Whirlwind Stream") then
                teleport()
            elseif teleportEnabled then
                notif()
            end
        end)
    end,
    function()
        teleportEnabled = false
        if teleportConnection then
            teleportConnection:Disconnect()
            teleportConnection = nil
        end
    end
)

-- Add credits text
local creditsText = Instance.new("TextLabel")
creditsText.Name = "CreditsText"
creditsText.Size = UDim2.new(1, -20, 1, -20)
creditsText.Position = UDim2.new(0, 10, 0, 10)
creditsText.Text = "MADE BY MUFFIN AND SOULS"
creditsText.TextColor3 = Color3.new(1, 1, 1)
creditsText.TextSize = 16
creditsText.Font = titleFont
creditsText.BackgroundTransparency = 1
creditsText.TextWrapped = true
creditsText.TextXAlignment = Enum.TextXAlignment.Center
creditsText.TextYAlignment = Enum.TextYAlignment.Center
creditsText.ZIndex = 3
creditsText.Parent = creditsContent

-- Tab Switching System
local function switchTab(selectedTab)
    for _, tab in ipairs(tabContainer:GetChildren()) do
        if tab:IsA("TextButton") then
            local outline = tab:FindFirstChild("UIStroke")
            tab.TextTransparency = tab.Name == selectedTab and 0 or 0.5
            if outline then outline.Transparency = tab.Name == selectedTab and 0 or 0.5 end
            
            -- Also handle text outline
            local textOutline = tab:FindFirstChild("UIStroke")
            if textOutline then
                textOutline.Transparency = tab.Name == selectedTab and 0 or 0.5
            end
        end
    end
    for _, content in ipairs(contentContainer:GetChildren()) do
        if content:IsA("ScrollingFrame") then
            content.Visible = content.Name == selectedTab.."Content"
        end
    end
end

-- Connect tabs
miscTab.MouseButton1Click:Connect(function() switchTab("MISC") end)
creditsTab.MouseButton1Click:Connect(function() switchTab("CREDITS") end)

-- TOGGLE SYSTEM
local function toggleUI(visible)
    mainFrame.Visible = visible
    toggleBtn.Visible = not visible
    if visible then
        mainFrame:TweenSize(UDim2.new(0, 700, 0, 380), Enum.EasingDirection.Out, Enum.EasingStyle.Quint, 0.3)
    end
end

closeBtn.MouseButton1Click:Connect(function() 
    toggleUI(false)
    toggleBtn.Visible = true
end)

toggleBtn.MouseButton1Click:Connect(function() 
    toggleUI(true)
    toggleBtn.Visible = false
end)

-- OPENING ANIMATION
local function openAnimation()
    toggleBtn.Visible = false
    mainFrame.Visible = true
    mainFrame.Size = UDim2.new(0, 700, 0, 2)
    mainFrame.BackgroundTransparency = 1
    titleText.TextTransparency = 1
    closeBtn.TextTransparency = 1
    topSeparator.Transparency = 1
    verticalSeparator.Transparency = 1
    
    for _, tab in ipairs(tabContainer:GetChildren()) do
        if tab:IsA("TextButton") then
            tab.TextTransparency = 1
            if tab:FindFirstChild("UIStroke") then
                tab.UIStroke.Transparency = 1
            end
            if tab:FindFirstChild("UIStroke") then
                tab:FindFirstChild("UIStroke").Transparency = 1
            end
        end
    end
    
    mainFrame:TweenSize(UDim2.new(0, 700, 0, 2), Enum.EasingDirection.Out, Enum.EasingStyle.Quint, 0.5, true, function()
        mainFrame:TweenSize(UDim2.new(0, 700, 0, 380), Enum.EasingDirection.Out, Enum.EasingStyle.Quint, 0.7)
        for i = 1, 0, -0.05 do
            mainFrame.BackgroundTransparency = i * 0.2
            titleText.TextTransparency = i
            closeBtn.TextTransparency = i
            topSeparator.Transparency = i
            verticalSeparator.Transparency = i
            for _, tab in ipairs(tabContainer:GetChildren()) do
                if tab:IsA("TextButton") then
                    tab.TextTransparency = i
                    if tab:FindFirstChild("UIStroke") then
                        tab.UIStroke.Transparency = i
                    end
                    if tab:FindFirstChild("UIStroke") then
                        tab:FindFirstChild("UIStroke").Transparency = i
                    end
                end
            end
            task.wait(0.03)
        end
        switchTab("MISC")
    end)
end

-- Auto-open with animation
openAnimation()

-- Initial notification
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "SOULS HUB",
    Text = "UI successfully initialized!",
    Duration = 5
})

-- Apply hover effects to all buttons
local function enhanceButton(btn)
    if not btn:IsA("TextButton") then return end
    
    btn.MouseEnter:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.2), {
            BackgroundTransparency = btn == toggleBtn and 0.5 or 0.85,
            TextColor3 = Color3.new(0.9, 0.9, 0.9)
        }):Play()
    end)
    
    btn.MouseLeave:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.2), {
            BackgroundTransparency = btn == toggleBtn and 0.3 or 1,
            TextColor3 = Color3.new(1, 1, 1)
        }):Play()
    end)
end

for _,v in pairs(screenGui:GetDescendants()) do
    enhanceButton(v)
end
